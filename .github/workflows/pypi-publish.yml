name: Publish Python 🐍 distribution 📦 to PyPI and Github Release

on:
  workflow_dispatch:
  push:
    tags:
    - '*'

jobs:
  build-publish-release:
    name: Build distribution 📦 publish to PyPI 🐍 and create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      # Used to authenticate to PyPI via OIDC.
      # Used to sign the release's artifacts with sigstore-python.
      id-token: write
      # Used to attach signing artifacts to the published release.
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: false

      - name: Build package
        run: |
          poetry version ${{ github.ref_name }}
          poetry build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Mint token
        id: mint
        uses: tschm/token-mint-action@v1.0.2

      - name: Publish the package with poetry
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          poetry publish -u __token__ -p '${{ steps.mint.outputs.api-token }}'

      - name: Sign published artifacts
        uses: sigstore/gh-action-sigstore-python@v2.1.0
        with:
          inputs: ./dist/*.tar.gz ./dist/*.whl
          release-signing-artifacts: true

      - name: Create GitHub Release
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'